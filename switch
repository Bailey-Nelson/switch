#!/usr/bin/env bash

BASE_PATH="dev/github.com"
BASE_URL="git@github.com"
CONFIG_FILE=~/.bnswitch
ORG_NAME=

# create a config file if it doesn't exist
[[ ! -f "$CONFIG_FILE" ]] && touch ~/.bnswitch

source $CONFIG_FILE

# function to clone and change directories
# $1 is repo name
function switchToRepo {
  # set org if not already set
  [[ -z $ORG_NAME ]] && setOrg

  DIR=~/$BASE_PATH/$ORG_NAME/$1
  # clone repo if it doesn't exist locally
  [ ! -d $DIR ] && git clone $BASE_URL:$ORG_NAME/$1.git $DIR
  # change to local repo directory if clone was successful or already exists
  echo "switching to \"$1\""
  [[ -d $DIR ]] && cd $DIR
}

# help text
function usage {
  echo -e "usage: switch [-h | --help] [-o | --org <organization>] <repo-name>"
  echo -e "examples:\n  $ switch looker-schema"
  echo -e "  $ switch --org bailey-nelson pipeline"
}

# specify and save github organization name
function setOrg {
  local org_name=

  # explicit
  if [[ -n $1 ]]; then
    org_name=$1

  # env
  elif [[ -n "$ORG_NAME" ]]; then
    org_name=$ORG_NAME

  # request
  else
    printf 'github org: '
    read org_name
  fi

  ORG_NAME=$(toLower $org_name)

  echo "ORG_NAME=$ORG_NAME" > $CONFIG_FILE
  echo "github organization set to '$ORG_NAME'"
}

# return lower case of input
function toLower {
  lower=$(echo $1 | tr '[:upper:]' '[:lower:]')
  echo $lower
}

# if no arguments
if [[ $# -eq 0 ]] ; then
  echo "ERROR: missing repo-name"
  usage
  exit 0
fi

# read arguments
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
  -h|--help)
  usage
  exit 0
  ;;
  -o|--org)
  setOrg $2
  shift
  shift
  ;;
  *)
  switchToRepo $1
  shift
  ;;
esac
done

# clean up
unset org_name
